- name: To configure backend server
  hosts: backend
  become: yes
  tasks:
  - name: To disable pervious nodejs module
    ansible.builtin.command: dnf module disable nodejs -y

  - name: To enable nodejs 20 version module
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: Install nodesjs and mysql
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    loop:
    - nodejs
    - mysql

  - name: Create user expense
    ansible.builtin.user
    name: expense

  - name: Create directory
    ansible.builtin.file:
    path: /app
    state: directory

  - name: download source code
    ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip
  
  - name: unzip the source code in remote backend server
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

  - name: Install NPM dependencies
    community.general.npm:
      path: /app

  - name: copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: Install python dependencies
    ansible.builtin.pip:
     name: "{{ item }}"
    loop:
    - PyMySQL
    - cryptography

  - name: import mysql data
    community.mysql.mysql_db:
      state: import
      name: all
      login_user: root
      login_password: ExpenseApp@1
      login_host: mysql.jaydevops.online
      target: /app/schema/backend.sql

  - name: daemon reload and restart service
    ansible.builtin.systemd_service:
    enabled: true
    state: restarted
    daemon_reload: true
    name: backend
          






